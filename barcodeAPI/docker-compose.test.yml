version: '3.8'

services:
  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - SECRET_KEY=test-secret-key-for-websocket-testing
      - MASTER_API_KEY=test-master-key
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - DATABASE_URL=postgresql+asyncpg://postgres:password@db:5432/barcode_api
      - REDIS_URL=redis://redis:6379
      - API_VERSION=1.0.0
      - ENVIRONMENT=development
      - LOG_DIRECTORY=logs
      - ROOT_PATH=/api/v1
      - DB_PASSWORD=password
      - SERVER_URL=http://localhost:8000
    volumes:
      - ./logs:/app/logs
    depends_on:
      - db
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health", "&&", "python3", "check_websocket_health.py"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  db:
    image: postgres:13
    environment:
      - POSTGRES_DB=barcode_api
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"

volumes:
  postgres_data: